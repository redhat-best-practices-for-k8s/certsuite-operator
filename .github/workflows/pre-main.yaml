name: Test Incoming Changes

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
env:
  CM_BIN: /usr/local/bin/checkmake
  CM_URL_LINUX: https://github.com/mrtazz/checkmake/releases/download/0.2.2/checkmake-0.2.2.linux.amd64 # yamllint disable-line

jobs:
  lint:
    name: Run Linters and Vet
    runs-on: ubuntu-22.04
    env:
      SHELL: /bin/bash

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Disable default go problem matcher
        run: echo "::remove-matcher owner=go::"

      - name: Extract dependent Pull Requests
        uses: depends-on/depends-on-action@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install checkmake
        run: |
          curl --location --output $CM_BIN --silent $CM_URL_LINUX
          chmod +x $CM_BIN

      - name: Install Shfmt
        uses: mfinelli/setup-shfmt@v3

      - name: Golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64
          args: --timeout 10m0s

      - name: Checkmake
        run: checkmake --config=.checkmake Makefile

      - name: Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          recursive: true

      # - name: Shfmt
      #   run: shfmt -d *.sh script

      - name: Markdownlint
        uses: nosborn/github-action-markdown-cli@v3.4.0
        with:
          files: .

      - name: ShellCheck
        uses: ludeeus/action-shellcheck@master

      - name: Typos
        uses: crate-ci/typos@master

      - name: Yamllint
        uses: ibiqlik/action-yamllint@v3
        with:
          config_file: .yamllint.yml

      - name: Go vet
        run: make vet

  test:
    name: Build, install and test operator in a Kind cluster
    runs-on: ubuntu-22.04
    env:
      SHELL: /bin/bash
      KUBECONFIG: '/home/runner/.kube/config'

    steps:
      - name: Disable default go problem matcher
        run: echo "::remove-matcher owner=go::"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      - name: Removed unused docker images and go cache cleanup
        run: |
          df -h
          docker rmi $(docker images -f "dangling=true" -q) || true
          docker builder prune --all -f
          go clean -modcache
          df -h

      - name: Setup the k8s cluster
        uses: palmsoftware/quick-k8s@v0.0.21
        with:
          disableDefaultCni: true
          numControlPlaneNodes: 1
          numWorkerNodes: 3
          installOLM: true
          removeDefaultStorageClass: true
          removeControlPlaneTaint: true

      - name: Build operator
        run: ./scripts/ci/build.sh

      - name: Install cert-manager to cluster
        run: |
          kubectl apply -f https://github.com/jetstack/cert-manager/releases/latest/download/cert-manager.yaml
          kubectl wait --for=condition=ready pod --all=true -n cert-manager --timeout=5m
      
      - name: Install consoleplugin CRD to cluster
        run: |
          kubectl apply -f https://raw.githubusercontent.com/openshift/api/master/console/v1/zz_generated.crd-manifests/90_consoleplugins-Default.crd.yaml

      - name: More cleanup
        run: |
          df -h
          docker rmi $(docker images -f "dangling=true" -q) || true
          docker builder prune --all -f
          go clean -modcache
          rm -rf ${GITHUB_WORKSPACE}/certsuite-sample-workload
          df -h

      - name: Install operator in the Kind cluster
        run: ./scripts/ci/deploy.sh

      - name: Run simple smoke test.
        run: ./scripts/ci/smoke_test.sh
